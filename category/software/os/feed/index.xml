<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Operating System &#8211; Norckon&#039;s blog</title>
	<atom:link href="/category/software/os/feed" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Norckon&#039;s blog</description>
	<lastBuildDate>Thu, 24 Aug 2017 14:09:08 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.9.1</generator>
	<item>
		<title>Steps for Signing a Device Driver Package</title>
		<link>/2017/06/steps-signing-device-driver-package.html</link>
		<comments>/2017/06/steps-signing-device-driver-package.html#respond</comments>
		<pubDate>Thu, 01 Jun 2017 07:01:26 +0000</pubDate>
		<dc:creator><![CDATA[Norckon]]></dc:creator>
				<category><![CDATA[Operating System]]></category>
		<category><![CDATA[Free Build Environment]]></category>
		<category><![CDATA[Right-click Trusted Publishers]]></category>
		<category><![CDATA[Security Catalog]]></category>
		<category><![CDATA[Windows]]></category>

		<guid isPermaLink="false">/?p=1828</guid>
		<description><![CDATA[INTRODUCE Because device drivers run with system-level privileges and can access anything on your computer, it is critical that you trust the device drivers that you install. Trust, in this context, includes two main principles: Authenticity is an assurance that the driver package came from its claimed source. It cannot be malicious code masquerading as [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><img class="aligncenter size-full wp-image-1831" src="./wp-content/uploads/2017/06/Windows-10-wallpaper-New-Logo.jpg" alt="" width="1920" height="1080" srcset="/wp-content/uploads/2017/06/Windows-10-wallpaper-New-Logo.jpg 1920w, /wp-content/uploads/2017/06/Windows-10-wallpaper-New-Logo-768x432.jpg 768w" sizes="(max-width: 1920px) 100vw, 1920px" /></p>
<h2>INTRODUCE</h2>
<p>Because device drivers run with system-level privileges and can access anything on your computer, it is critical that you trust the device drivers that you install. Trust, in this context, includes two main principles:</p>
<ul>
<li class="unordered"><strong>Authenticity</strong> is an assurance that the driver package came from its claimed source. It cannot be malicious code masquerading as something legitimate.</li>
<li class="unordered"><strong>Integrity</strong> is an assurance that the package is 100 percent intact, and has not been modified by anyone after it was released.</li>
</ul>
<p>Windows uses digital certificates and digital signatures to provide support for these principles. A <strong>digital certificate</strong> identifies an organization, and it is trustworthy because it can be checked electronically by a certification authority (CA). A <strong>digital signature</strong> uses information in the organization&#8217;s digital certificate to encrypt specific details about the package.</p>
<p>The encrypted information in a digital signature includes a <strong>thumbprint</strong>, or <strong>hash</strong>, for each file included with the package. The thumbprint is generated by a special cryptographic algorithm referred to as a <em>hashing algorithm</em>. The algorithm generates a thumbprint that can only be recreated by using that file&#8217;s contents. Changing a single bit in the file changes the thumbprint. After the thumbprints are generated, they are combined together into a catalog, and then encrypted.</p>
<p>The following figure shows the process used to sign a driver package.</p>
<p><a href="/wp-content/uploads/2017/06/1496300471-8835-IC71830.gif"><img class="attachment-full size-full" src="./wp-content/uploads/2017/06/1496300471-8835-IC71830.gif" alt="" width="234" height="241" /></a></p>
<p>In this process the following steps take place:</p>
<p>The original driver package has no signature, and no .cat file in which a signature can be placed. In Step 1 of the diagram the <strong>Inf2Cat</strong> tool is run to create the .cat file, in which it places a thumbprint for each file identified as part of the driver package, as specified in the .inf file. In Step 2, the <strong>SignTool</strong> tool is run, specifying a digital certificate to encrypt, and thus sign, the .cat file. In Step 3, the digitally signed .cat file is included with the driver package and deployed to client computers.</p>
<p>The recipient computer confirms the identity of the package originator by using a copy of the certificate to decrypt the signature on the package. A successful decryption proves that the owner of the certificate is the signer of the package.</p>
<p>The same hashing algorithm used to create the thumbprints is used again during the confirmation process. Windows generates a thumbprint for each file received in the package. If the thumbprints generated by the receiving computer are identical to the ones found encrypted in the signature, then the recipient can be sure that the received package is identical to the original. If the thumbprints do not match, then the files were altered in some way after they were signed, and should not be trusted.</p>
<p>On each computer, Windows maintains a store for digital certificates. As the computer administrator, you can add certificates from publishers that you trust. If a package is received for which a matching certificate cannot be found in the certificate store, then Windows presents a page asking the user to confirm that the publisher is trusted. By placing a certificate in the certificate store on all of your client computers, you are telling Windows that all packages signed by that certificate are trusted.</p>
<h2>Create a digital certificate for signing</h2>
<h3><strong>Method 1:</strong> Certificates MMC</h3>
<ol>
<li>Click <strong>Start</strong>, click <strong>Run</strong>, and then in the Run box, type: <strong>mmc</strong></li>
<li>In <strong>Console1 – [Console Root]</strong>, click <strong>File</strong>, and then click <strong>Add/Remove Snap-in</strong>.</li>
<li>In <strong>Add or Remove Snap-ins</strong>, in the <strong>Available snap-ins</strong> list, select <strong>Certificates</strong>, and then click <strong>Add</strong>.</li>
<li>In <strong>Certificates snap-in</strong>, select <strong>Computer Account</strong>, and then click <strong>Next</strong>.</li>
<li>On the <strong>Select Computer</strong> dialog box, select <strong>Local computer: (the computer this console is running on)</strong>, and then click <strong>Finish</strong>.</li>
<li>Click <strong>OK</strong> to close the <strong>Add or Remove Snap-ins</strong> page.</li>
</ol>
<h3><strong>Method 2:</strong> The MakeCert tool</h3>
<ol>
<li>Open an <strong>x86 Free Build Environment</strong> command prompt with administrator permissions, by right-clicking x86 Free Build Environment on the <strong>Start</strong> menu, and then selecting <strong>Run as administrator</strong>.</li>
<li>At the <strong>x86 Free Build Environment</strong> command prompt, type the following command on a single line (it appears here on multiple lines for clarity and to fit space limitations):
<pre>makecert -r -n "CN=MyCompany - for test use only"
         -ss MyCompanyCertStore 
         -sr LocalMachine</pre>
<p>The meaning of each parameter is as follows:</p>
<ul>
<li><strong>-r</strong><br />
Specifies that the certificate is to be &#8220;self-signed,&#8221; rather than signed by a CA. Also called a &#8220;root&#8221; certificate.</li>
<li><strong>-n &#8220;CN= MyCompany &#8211; for test use only&#8221;</strong><br />
Specifies the name associated with this new certificate. It is recommended that you use a certificate name that clearly identifies the certificate and its purpose.</li>
<li><strong>-ss MyCompanyCertStore</strong><br />
Specifies the name of certificate store in which the new certificate is placed.</li>
<li><strong>-sr LocalMachine</strong><br />
Specifies that the certificate store created by the -ss option is in the per computer store, instead of the default per user store.</li>
</ul>
<p>The command returns the message &#8220;Succeeded&#8221; when the store and certificate are created.</li>
<li>Verify that your new certificate was created correctly. In the <strong>Certificates</strong> MMC snap-in that you opened earlier, open the node <strong>Certificates (Local Computer)</strong>, then <strong>MyCompanyCertStore</strong>, and then <strong>Certificates</strong>.</li>
<li>In the right-hand pane, double-click <strong>MyCompany &#8211; for test use only</strong>.The certificate dialog appears showing your new certificate.<br />
<a href="/wp-content/uploads/2017/06/1496300070-1267-IC302442.gif"><img class="attachment-full size-full" src="./wp-content/uploads/2017/06/1496300070-1267-IC302442.gif" alt="" width="419" height="521" /></a></li>
<li>Click <strong>OK</strong> to close the Certificate page.</li>
</ol>
<h2>Add the certificate to the Trusted Root Certification Authorities store</h2>
<div class="sectionblock">
<ol class="ordered">
<li>In the Certificates snap-in, right-click <strong>MyCompany &#8211; for test use only</strong>, and then click <strong>Copy</strong>.</li>
<li>Right-click <strong>Trusted Root Certification Authorities</strong>, and then click <strong>Paste</strong>.</li>
<li>Open <strong>Trusted Root Certification Authorities</strong> and <strong>Certificates</strong>, and then double-click your certificate.</li>
<li>Confirm that the &#8220;Not trusted&#8221; message no longer appears, and then click <strong>OK</strong> to close the certificate.</li>
</ol>
<h2>Add the certificate to the per machine Trusted Publishers store</h2>
<div class="sectionblock">
<ol class="ordered">
<li>In the Certificates snap-in, right-click your certificate, and then click <strong>Copy</strong>.</li>
<li>Right-click <strong>Trusted Publishers</strong>, and then click <strong>Paste</strong>.</li>
<li>Open <strong>Trusted Publishers</strong> and <strong>Certificates</strong>, and then confirm that a copy of your certificate is in the folder.</li>
<li>Click <strong>OK</strong> to close the certificate.</li>
</ol>
<h2>Sign the device driver package with the certificate</h2>
<h3>Prepare the driver package .inf file</h3>
<div class="sectionblock">
<ol class="ordered">
<li>At the <strong>x86 Free Build Environment</strong> command prompt with administrator permissions, change to the folder that contains your driver package. Type the following command:
<div id="code-snippet-2" class="codeSnippetContainer">
<div class="codeSnippetContainerCodeContainer">
<div id="CodeSnippetContainerCode_37751925-4501-4bda-b820-40605b0fb94a" class="codeSnippetContainerCode" dir="ltr">
<div>
<pre>cd c:\toaster\device
</pre>
</div>
</div>
</div>
</div>
</li>
<li>Then type the command:
<div id="code-snippet-3" class="codeSnippetContainer">
<div class="codeSnippetContainerCodeContainer">
<div id="CodeSnippetContainerCode_78a45de6-57b6-4319-ae86-8db29c14131e" class="codeSnippetContainerCode" dir="ltr">
<div>
<pre>Notepad toastpkg.inf
</pre>
</div>
</div>
</div>
</div>
<p>Notepad opens with the .inf file displayed.</li>
<li>Find the <strong>[Version]</strong> section. The original file includes the lines:
<div id="code-snippet-4" class="codeSnippetContainer">
<div class="codeSnippetContainerCodeContainer">
<div id="CodeSnippetContainerCode_5d34b728-cc33-4996-9902-06bf70535102" class="codeSnippetContainerCode" dir="ltr">
<div>
<pre>CatalogFile.NTx86 = tostx86.cat
CatalogFile.NTIA64 = tostia64.cat
CatalogFile.NTAMD64 = tstamd64.cat
</pre>
</div>
</div>
</div>
</div>
</li>
<li>Delete those three lines, and replace them with following single line:
<div id="code-snippet-5" class="codeSnippetContainer">
<div class="codeSnippetContainerCodeContainer">
<div id="CodeSnippetContainerCode_f95fb7e9-7fe8-4323-919b-cda9ea443b4c" class="codeSnippetContainerCode" dir="ltr">
<div>
<pre>CatalogFile=toaster.cat
</pre>
</div>
</div>
</div>
</div>
</li>
<li>In the <strong>[Version]</strong> section, find the line that begins with <strong>DriverVer=</strong>. Replace the date and version number so that the line appears as follows:
<div id="code-snippet-6" class="codeSnippetContainer">
<div class="codeSnippetContainerCodeContainer">
<div id="CodeSnippetContainerCode_125f0295-5f63-451a-b960-19817500758e" class="codeSnippetContainerCode" dir="ltr">
<div>
<pre>DriverVer=05/01/2009,9.9.9.9
</pre>
</div>
</div>
</div>
</div>
</li>
<li>In the <strong>[Toaster_Device.NT.CoInstallers]</strong> section, find and delete these three lines:
<div id="code-snippet-7" class="codeSnippetContainer">
<div class="codeSnippetContainerCodeContainer">
<div id="CodeSnippetContainerCode_7b71a8b5-d6a5-4f31-b28a-7d312c932c2b" class="codeSnippetContainerCode" dir="ltr">
<div>
<pre>[Toaster_Device.NT.CoInstallers]
AddReg=CoInstaller_AddReg
CopyFiles=CoInstaller_CopyFiles
</pre>
</div>
</div>
</div>
</div>
</li>
<li>Save your changes, and then close Notepad.</li>
</ol>
</div>
</div>
</div>
<h3>Create a catalog file for the driver package</h3>
<div class="sectionblock">
<ol class="ordered">
<li>At the <strong>x86 Free Build Environment</strong> command prompt with administrator permissions, type the following command:
<p><strong>inf2cat /driver:c:\toaster\device /os:7_x86</strong></p>
<p>The meaning of each parameter is as follows:</p>
<ul>
<li class="unordered"><strong>/driver:</strong> <em>c:\toaster\device</em><br />
Specifies the location of the .inf file for the driver package. You must specify the complete folder path. A &#8216;.&#8217; character does not work here to represent the current folder.</li>
<li class="unordered"><strong>/os:</strong> <em>7_x86</em><br />
Identifies the 32-bit version of Windows 7as the operating system. Run the command <strong>inf2cat /?</strong> for a complete list of supported operating systems and their codes.</li>
</ul>
</li>
<li>Review the output of the inf2cat tool.
<div id="code-snippet-8" class="codeSnippetContainer">
<div class="codeSnippetContainerCodeContainer">
<div id="CodeSnippetContainerCode_4a9de5c5-e069-4df0-9302-1c814138344c" class="codeSnippetContainerCode" dir="ltr">
<div>
<pre>Signability test complete
......................
Errors:
None

Warnings:
None

Catalog generation complete.
C:\toaster\device\toaster.cat
</pre>
</div>
</div>
</div>
</div>
</li>
<li>Review the completed .cat file. At the command prompt, type
<div id="code-snippet-9" class="codeSnippetContainer">
<div class="codeSnippetContainerCodeContainer">
<div id="CodeSnippetContainerCode_eb793306-7f6d-4262-8d9c-f6600a8bfe43" class="codeSnippetContainerCode" dir="ltr">
<div>
<pre>start toaster.cat
</pre>
</div>
</div>
</div>
</div>
<p>The <strong>Security Catalog</strong> dialog box appears, indicating that the catalog is not digitally signed. Because the .cat file is not signed, the <strong>View Signature</strong> button is disabled.</p>
<p><a href="/wp-content/uploads/2017/06/1496300070-6279-IC302443.gif"><img class="attachment-full size-full" src="./wp-content/uploads/2017/06/1496300070-6279-IC302443.gif" alt="" width="420" height="519" /></a></li>
<li>Click the <strong>Security Catalog</strong> tab. There are three entries in the <strong>Catalog entries</strong> section, one each for the .inf file, the .sys file, and the .dll file of the driver package. Click each entry, and note in the Entry Details section that each file in the package has an entry, along with a &#8220;thumbprint&#8221; (the hash) that can be used to confirm the integrity of the file.</li>
<li>Click <strong>OK</strong> to close the <strong>Security Catalog</strong> dialog box.</li>
</ol>
</div>
<h3>Sign the catalog file by using SignTool</h3>
<div class="sectionblock">
<ol class="ordered">
<li>At the <strong>x86 Free Build Environment</strong> command prompt with administrator permissions, type the following command all on one line. It appears here on multiple lines for clarity and to fit space limitations:
<div id="code-snippet-10" class="codeSnippetContainer">
<div class="codeSnippetContainerCodeContainer">
<div id="CodeSnippetContainerCode_2d18d722-4d1c-4b4c-8724-494cee728f58" class="codeSnippetContainerCode" dir="ltr">
<div>
<pre>SignTool sign /s MyCompanyCertStore /n “MyCompany – for test use only”
         /t http://timestamp.verisign.com/scripts/timestamp.dll
         toaster.cat
</pre>
</div>
</div>
</div>
</div>
<p>The meaning of each parameter is as follows:</p>
<ul>
<li class="unordered"><strong>/s </strong> <em>MyCompanyCertStore</em><br />
Specifies the name of the certificate store in which SignTool searches for the certificate specified by the parameter /n.</li>
<li class="unordered"><strong>/n “</strong> <em>MyCompany – for test use only</em> <strong>”</strong><br />
Specifies the name of the certificate to be used to sign the package. You must include enough of the name to allow SignTool to distinguish it from others in the store. If this name includes spaces, then you must surround the name with double quotes.</li>
<li class="unordered"><strong>/t </strong> <em>path to time stamping service</em><br />
Specifies the path to a time stamping service at an approved certification authority. If you purchase your certificate from a commercial vendor, they should provide you with the appropriate path to their service.</li>
<li class="unordered"><em>toaster.cat</em><br />
Specifies the path and file name of the catalog file to be signed.</li>
</ul>
<p>Signtool indicates completion with the following message:</p>
<div id="code-snippet-11" class="codeSnippetContainer">
<div class="codeSnippetContainerCodeContainer">
<div id="CodeSnippetContainerCode_dd6c433e-8276-46a5-b012-f34385031392" class="codeSnippetContainerCode" dir="ltr">
<div>
<pre>Successfully signed and timestamped: C:\toaster\device\toaster.cat 
</pre>
</div>
</div>
</div>
</div>
</li>
<li>To view and verify your signed catalog file, at the command prompt, type:
<div id="code-snippet-12" class="codeSnippetContainer">
<div class="codeSnippetContainerCodeContainer">
<div id="CodeSnippetContainerCode_ad31ecc8-858e-463a-81a3-601d4cbf2774" class="codeSnippetContainerCode" dir="ltr">
<div>
<pre>start toaster.cat
</pre>
</div>
</div>
</div>
</div>
</li>
<li>Make sure that the header of the <strong>Security Catalog</strong> property page now states that the security catalog is &#8220;valid&#8221;, and that the <strong>View Signature</strong> button is enabled.</li>
<li>Click <strong>View Signature</strong>, and then confirm the details of the signature you added to the package. No other details of the catalog file have changed.</li>
</ol>
</div>
<h2>REFERENCE</h2>
<ul>
<li><a href="https://technet.microsoft.com/en-us/library/dd919238(v=ws.10).aspx">Microsoft TechNet &#8211; Steps for Signing a Device Driver Package</a></li>
</ul>
<p>&nbsp;</p>
]]></content:encoded>
			<wfw:commentRss>/2017/06/steps-signing-device-driver-package.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Linux WiFi: Deauthenticated Reason Codes</title>
		<link>/2016/05/linux-wifi-deauthenticated-reason-codes.html</link>
		<comments>/2016/05/linux-wifi-deauthenticated-reason-codes.html#respond</comments>
		<pubDate>Wed, 25 May 2016 05:51:08 +0000</pubDate>
		<dc:creator><![CDATA[Norckon]]></dc:creator>
				<category><![CDATA[Operating System]]></category>
		<category><![CDATA[ESS]]></category>
		<category><![CDATA[IEEE]]></category>
		<category><![CDATA[MIC]]></category>
		<category><![CDATA[STA]]></category>

		<guid isPermaLink="false">/?p=1721</guid>
		<description><![CDATA[So I’ve been having a fiddle with Linux and WiFi this evening in an attempt to make a wifi bridge (Windows can do it so why can’t Linux?)… Anyway the long and short of it is that I was getting disconnected and de-authenticated from the access point. Having a quick look at dmesg said I [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><a href="/wp-content/uploads/2016/05/1464155450-4108-linux-1x.png"><img class="attachment-full size-full aligncenter" src="./wp-content/uploads/2016/05/1464155450-4108-linux-1x.png" alt="1464155450-4108-linux-1x" width="400" height="300" /></a></p>
<p>So I’ve been having a fiddle with Linux and WiFi this evening in an attempt to make a wifi bridge (Windows can do it so why can’t Linux?)…</p>
<p>Anyway the long and short of it is that I was getting disconnected and de-authenticated from the access point. Having a quick look at dmesg said I was disconnected for “Reason 2” and “Reason 6”; these on their own are not very helpful and so in a quest to find out what these codes meant, I found that there isn’t a list that’s published anywhere easy to find (a <a title="Forum Post" href="http://forums.wi-fiplanet.com/showthread.php?6536-deauthentication-reason-code">single forum post</a> and in an <a title="IEEE 802.11-2007" href="http://standards.ieee.org/getieee802/download/802.11-2007.pdf">IEEE pdf</a>). The codes in <em>italics</em> are the most common.</p>
<table>
<tbody>
<tr>
<td><strong>Code</strong></td>
<td><strong>Reason</strong></td>
<td><strong>Explanation</strong></td>
</tr>
<tr>
<td><em>0</em></td>
<td>Reserved</td>
<td>Normal working operation</td>
</tr>
<tr>
<td><em>1</em></td>
<td>Unspecific Reason</td>
<td>We don’t know what’s wrong</td>
</tr>
<tr>
<td><em>2</em></td>
<td>Previous authentication no longer valid</td>
<td>Client has associated but is not authorised.</td>
</tr>
<tr>
<td><em>3</em></td>
<td>Deauthenticated because sending STA is leaving (or has left) IBSS or ESS</td>
<td>The access point went offline, deauthenticating the client.</td>
</tr>
<tr>
<td><em>4</em></td>
<td>Disassociated due to inactivity</td>
<td>Client session timeout exceeded.</td>
</tr>
<tr>
<td><em>5</em></td>
<td>Disassociated because AP is unable to handle all currently associated STAs</td>
<td>The access point is busy, performing load balancing, for example.</td>
</tr>
<tr>
<td><em>6</em></td>
<td>Class 2 frame received from nonauthenticated STA</td>
<td>Client attempted to transfer data before it was authenticated.</td>
</tr>
<tr>
<td><em>7</em></td>
<td>Class 3 frame received from nonassociated STA</td>
<td>Client attempted to transfer data before it was associated.</td>
</tr>
<tr>
<td><em>8</em></td>
<td>Disassociated because sending STA is leaving (or has left) BSS</td>
<td>Operating System moved the client to another access point using non-aggressive load balancing.</td>
</tr>
<tr>
<td><em>9</em></td>
<td>STA requesting (re)association is not authenticated with responding STA</td>
<td>Client not authorized yet, still attempting to associate with an access point.</td>
</tr>
<tr>
<td>10</td>
<td>Disassociated because the information in the Power Capability element is unacceptable</td>
<td></td>
</tr>
<tr>
<td>11</td>
<td>Disassociated because the information in the Supported Channels element is unacceptable</td>
<td></td>
</tr>
<tr>
<td>12</td>
<td>Reserved</td>
<td>Not Used or Special Purpose</td>
</tr>
<tr>
<td>13</td>
<td>Invalid information element.</td>
<td></td>
</tr>
<tr>
<td>14</td>
<td>Message integrity code (MIC) failure</td>
<td></td>
</tr>
<tr>
<td>15</td>
<td>4-Way Handshake timeout</td>
<td></td>
</tr>
<tr>
<td>16</td>
<td>Group Key Handshake timeout</td>
<td></td>
</tr>
<tr>
<td>17</td>
<td>Information element in 4-Way Handshake different from (Re)Association Request/Probe<br />
Response/Beacon frame</td>
<td></td>
</tr>
<tr>
<td>18</td>
<td>Invalid group cipher<br />
<em>or</em><br />
Association denied due to requesting STA not supporting all of the data rates in the BSSBasicRateSet parameter</td>
<td><strong>*NEW*</strong><br />
The link speed requested by the client or AP is incompatible. (i,e. trying to operate N only speeds on a G AP)</td>
</tr>
<tr>
<td>19</td>
<td>Invalid pairwise cipher</td>
<td></td>
</tr>
<tr>
<td>20</td>
<td>Invalid AKMP</td>
<td></td>
</tr>
<tr>
<td>21</td>
<td>Unsupported RSN information element version</td>
<td></td>
</tr>
<tr>
<td>22</td>
<td>Invalid RSN information element capabilities</td>
<td></td>
</tr>
<tr>
<td>23</td>
<td>IEEE 802.1X authentication failed</td>
<td></td>
</tr>
<tr>
<td>24</td>
<td>Cipher suite rejected because of the security policy</td>
<td></td>
</tr>
<tr>
<td>25-31</td>
<td>Reserved</td>
<td>Not Used or Special Purpose</td>
</tr>
<tr>
<td>32</td>
<td>Disassociated for unspecified, QoS-related reason</td>
<td>Quality of Service has denied the action.</td>
</tr>
<tr>
<td>33</td>
<td>Disassociated because QoS AP lacks sufficient bandwidth for this QoS STA</td>
<td></td>
</tr>
<tr>
<td>34</td>
<td>Disassociated because excessive number of frames need to be acknowledged, but are not<br />
acknowledged due to AP transmissions and/or poor channel conditions</td>
<td></td>
</tr>
<tr>
<td>35</td>
<td>Disassociated because STA is transmitting outside the limits of its TXOPs</td>
<td></td>
</tr>
<tr>
<td>36</td>
<td>Requested from peer STA as the STA is leaving the BSS (or resetting)</td>
<td></td>
</tr>
<tr>
<td>37</td>
<td>Requested from peer STA as it does not want to use the mechanism</td>
<td></td>
</tr>
<tr>
<td>38</td>
<td>Requested from peer STA as the STA received frames using the mechanism for which a<br />
setup is required</td>
<td></td>
</tr>
<tr>
<td>39</td>
<td>Requested from peer STA due to timeout</td>
<td></td>
</tr>
<tr>
<td>45</td>
<td>Peer STA does not support the requested cipher suite</td>
<td></td>
</tr>
<tr>
<td>45-65</td>
<td>Reserved</td>
<td>Not Used or Special Purpose</td>
</tr>
<tr>
<td><em>99</em></td>
<td></td>
<td>Typically “No Reason Code” / Unknown State</td>
</tr>
<tr>
<td>535</td>
<td>Reserved</td>
<td>Not Used or Special Purpose</td>
</tr>
</tbody>
</table>
<p>The first few reason codes where helpful while debugging my wifi related issues.</p>
<h2><strong>ORIGINAL AUTHOR&#8217;S EDIT</strong></h2>
<p>I’ve added a few more codes and descriptions; they conflict with a previous list from IEEE but this one is from <a href="https://supportforums.cisco.com/docs/DOC-14033" target="_blank">Cisco</a> and was discovered after an N wifi card refused to connect to an N router at N speeds.</p>
<h2>REFERENCE</h2>
<p>Author: Adam<br />
From Link: <a href="http://www.aboutcher.co.uk/2012/07/linux-wifi-deauthenticated-reason-codes/">http://www.aboutcher.co.uk/2012/07/linux-wifi-deauthenticated-reason-codes/</a></p>
]]></content:encoded>
			<wfw:commentRss>/2016/05/linux-wifi-deauthenticated-reason-codes.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Raspberry Pi &#8211; Control by Android</title>
		<link>/2014/12/raspberry-pi-control-by-android.html</link>
		<comments>/2014/12/raspberry-pi-control-by-android.html#respond</comments>
		<pubDate>Sun, 07 Dec 2014 07:24:18 +0000</pubDate>
		<dc:creator><![CDATA[Norckon]]></dc:creator>
				<category><![CDATA[Hardware]]></category>
		<category><![CDATA[Operating System]]></category>
		<category><![CDATA[GPIO]]></category>
		<category><![CDATA[LIRC]]></category>
		<category><![CDATA[Raspberry Control]]></category>
		<category><![CDATA[Reboot Raspberry]]></category>

		<guid isPermaLink="false">/?p=1456</guid>
		<description><![CDATA[APPLICATION FEATURES secure connection via SSH easy control and monitoring GPIO monitor and graph temperatures remotely using DS18B20 remote terminal emulator remote process management built-in MJPEG stream client easy 1-wire and I2C bus management IR control system WHATS NEW IN VERSION 0.2 added IR control system (LIRC) – now user can remote control any devices via [&#8230;]]]></description>
				<content:encoded><![CDATA[<h2>APPLICATION FEATURES</h2>
<ul>
<li>secure connection via SSH</li>
<li>easy control and monitoring GPIO</li>
<li>monitor and graph temperatures remotely using DS18B20</li>
<li>remote terminal emulator</li>
<li>remote process management</li>
<li>built-in MJPEG stream client</li>
<li>easy 1-wire and I2C bus management</li>
<li>IR control system</li>
</ul>
<h2>WHATS NEW IN VERSION 0.2</h2>
<ul>
<li>added IR control system (LIRC) – now user can remote control any devices via Infrared</li>
<li>added configuration file (rpc.conf)</li>
<li>fixed problem with too long user name</li>
<li>improved app stability</li>
<li>added ability to change the GPIO labels (via rpc.conf file)</li>
<li>fixed minor bugs</li>
</ul>
<h2>NEW FEATURE COMING SOON</h2>
<ul>
<li>remote touchpad</li>
<li>XBMC remote control</li>
<li>support for new 1-wire devices</li>
<li>support for new I2C devices</li>
<li>voice control</li>
</ul>
<h2>READ BEFORE RATING THIS APP IN GOOGLE PLAY</h2>
<p>Please remember that this is very early Beta version (app is still under development!!!). If you’re having any trouble, questions or feature requests PLEASE CONTACT US BEFORE RATING, so we can help you out and improve the App – your feedback really does help.</p>
<h2>HOW TO UNINSTALL OLD VERSION (0.1)</h2>
<p>Previously version of “Raspberry Control” doesn’t have uninstaller, so you have to remove all files manualy:</p>
<pre class="nums:false lang:default highlight:0 decode:true ">rm -Rf $HOME/Raspberry_Control
sudo insserv -r rpc_shellinaboxd
sudo rm /etc/init.d/rpc_shellinaboxd</pre>
<p>and remove “<em>/home/pi/Raspberry_Control/core/rpc_export</em>” line form <em>~/.bashrc</em> file (probably it will be last line in this file).</p>
<h2>DOWNLOAD &amp; INSTALLATION INSTRUCTIONS (0.2)</h2>
<p>The recommended way to install “<em>Raspberry Control</em>” on Raspberry Pi is on the console. Please open a console application such as Terminal or xterm on RPi</p>
<ul>
<li>Download the last version of the “Raspberry Control” software: <a href="http://lukasz-skalski.com/index.php/component/option,com_phocadownload/Itemid,90/id,1/view,category/" target="_blank">DOWNLOAD LINK</a></li>
<li>Navigate to the location where you have downloaded file and extract the tar.gz archive into any directory of your choice</li>
</ul>
<pre class="nums:false lang:default highlight:0 decode:true">tar xvzf rpc_installer-2013-03-24.tar.gz</pre>
<ul>
<li>Run installation script</li>
</ul>
<pre class="nums:false lang:default highlight:0 decode:true ">cd rpc_installer
./rpc_utils --install (without sudo!)</pre>
<ul>
<li>Reboot Raspberry pi</li>
<li>Download from Google Play and install “Raspberry Control” (version 0.2) application on your Android Device</li>
</ul>
<h2>ORIGINAL LINK</h2>
<blockquote><p>http://codebangers.com/how-to-setup-your-raspberry-pi-to-use-raspberry-pi-android-app/</p></blockquote>
]]></content:encoded>
			<wfw:commentRss>/2014/12/raspberry-pi-control-by-android.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Change Ubuntu screenshot save location</title>
		<link>/2014/11/change-ubuntu-screenshot-save-location.html</link>
		<comments>/2014/11/change-ubuntu-screenshot-save-location.html#respond</comments>
		<pubDate>Sun, 09 Nov 2014 04:44:34 +0000</pubDate>
		<dc:creator><![CDATA[Norckon]]></dc:creator>
				<category><![CDATA[Operating System]]></category>
		<category><![CDATA[APT]]></category>
		<category><![CDATA[Change Ubuntu]]></category>
		<category><![CDATA[Username Pictures]]></category>
		<category><![CDATA[Username Screenshots]]></category>

		<guid isPermaLink="false">/?p=1400</guid>
		<description><![CDATA[INTRODUCE If you don&#8217;t want Ubuntu save screenshots to /home/Username/Pictures directory by default. You can use dconf Editor to change it! STEP1: INSTALL DCONF EDITOR If your Ubuntu can&#8217;t found dconf-Editor, You can use APT command sudo apt-get install dconf-tools to install it! user@localhost$ sudo apt-get install dconf-tools Reading package lists... Done Building dependency tree [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><a href="/wp-content/uploads/2014/11/screenshots.jpg"><img class="attachment-full" src="./wp-content/uploads/2014/11/screenshots.jpg" alt="screenshots" width="960" height="310" /></a></p>
<h2>INTRODUCE</h2>
<p>If you don&#8217;t want Ubuntu save screenshots to <code>/home/Username/Pictures</code> directory by default. You can use <strong>dconf Editor</strong> to change it!</p>
<h2>STEP1: INSTALL DCONF EDITOR</h2>
<p>If your Ubuntu can&#8217;t found dconf-Editor, You can use APT command <code>sudo apt-get install dconf-tools</code> to install it!</p>
<pre class="lang:default decode:true">user@localhost$ sudo apt-get install dconf-tools
Reading package lists... Done
Building dependency tree      
Reading state information... Done
dconf-tools is already the newest version.
0 upgraded, 0 newly installed, 0 to remove and 6 not upgraded.</pre>
<h2>STEP2: RUN DCONF EDITOR</h2>
<p>Press <code>ALT + F2</code> key, and enter <code>dconf-editor</code> press <code>Enter</code> key.</p>
<p><a href="/wp-content/uploads/2014/11/alt-f2-then-dconf-editor_thumb.png"><img class="attachment-full" src="./wp-content/uploads/2014/11/alt-f2-then-dconf-editor_thumb.png" alt="alt-f2-then-dconf-editor_thumb" width="1005" height="824" /></a></p>
<h2>STEP3: CHANGE SAVE LOCATION</h2>
<p><a href="/wp-content/uploads/2014/11/org-gnome-gnome-screenshot-auto-save-directory_thumb.png"><img class="attachment-full" src="./wp-content/uploads/2014/11/org-gnome-gnome-screenshot-auto-save-directory_thumb.png" alt="org-gnome-gnome-screenshot-auto-save-directory_thumb" width="807" height="805" /></a></p>
<p>Change <code>auto-save-directory</code> to a location you want to save. like <code>file:///home/Username/Screenshots</code>.</p>
<h2>TIPS</h2>
<p><strong>PrintScreen</strong>: Shot your screen.</p>
<p><strong>Alt + PrintScreen</strong>: Shot application window</p>
<p><strong>Shift + PrintScreen</strong>: Shot a area you selected</p>
<h2>REFERRER</h2>
<ul>
<li><a href="http://www.crifan.com/ubuntu_change_screeshot_default_save_location/">【已解决】Ubuntu更改截图默认保存位置</a></li>
</ul>
<p>Pekaikon Norckon<br />
9 &#8211; 11 &#8211; 2014 (SUN)</p>
]]></content:encoded>
			<wfw:commentRss>/2014/11/change-ubuntu-screenshot-save-location.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Turn off monitor using command line</title>
		<link>/2014/11/turn-off-monitor-using-command-line.html</link>
		<comments>/2014/11/turn-off-monitor-using-command-line.html#respond</comments>
		<pubDate>Sun, 09 Nov 2014 04:05:23 +0000</pubDate>
		<dc:creator><![CDATA[Norckon]]></dc:creator>
				<category><![CDATA[Operating System]]></category>
		<category><![CDATA[EXAMPLE]]></category>
		<category><![CDATA[XRANDR]]></category>

		<guid isPermaLink="false">/?p=1396</guid>
		<description><![CDATA[INTRODUCE In sometimes. maybe you running server on your laptop or you have two or more display connected to your laptop. There is really no reason for the laptop screen to be on. You can turn off monitor by switchboard (System Settings) on Linux startup everytime. But that&#8217;s too complex. But If we can turn [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><a href="/wp-content/uploads/2014/11/1e30e924b899a901599369d81c950a7b0308f5bd.jpg"><img class="attachment-full" src="./wp-content/uploads/2014/11/1e30e924b899a901599369d81c950a7b0308f5bd.jpg" alt="1e30e924b899a901599369d81c950a7b0308f5bd" width="900" height="602" /></a></p>
<h2>INTRODUCE</h2>
<p>In sometimes. maybe you running server on your laptop or you have two or more display connected to your laptop. There is really no reason for the laptop screen to be on.</p>
<p>You can turn off monitor by switchboard (System Settings) on Linux startup everytime. But that&#8217;s too complex. But If we can turn off monitor using command line, we can write down a script on Linux startup to turn off our monitor.</p>
<h2>XRANDR COMMAND</h2>
<p>Fortunately, X-Desktop provided a command-line tool <strong>XRANDR</strong>, can manage our monitors. We can use <code>$xrandr</code> to list all of monitors. And we can use <code>$xrandr --output DISPLAY_NAME --off</code> to turn off monitors.</p>
<h2>EXAMPLE</h2>
<pre class="lang:default decode:true ">// LIST ALL OF DISPLAY HAVE CONNECTED
$ xrandr
Screen 0: minimum 320 x 200, current 1360 x 768, maximum 2726 x 2726
DFP1 connected 1360x768+0+0 (normal left inverted right x axis y axis) 304mm x 228mm
   1360x768       59.7*+
   ... (more details are shown here, but I have hidden it)

CRT1 connected 1360x768+0+0 (normal left inverted right x axis y axis) 410mm x 230mm
   1360x768       59.8*+   60.0  
   ... (more details are shown here, but I have hidden it)</pre>
<pre class="lang:default decode:true">// TURN OFF CRT
$ xrandr --output CRT1 --off</pre>
<pre class="lang:default decode:true ">// TURN ON CRT
$ xrandr --output CRT1 --auto</pre>
<h2>REFERRER</h2>
<ul>
<li><a href="http://askubuntu.com/questions/62858/turn-off-monitor-using-command-line">Turn off monitor using command line</a></li>
</ul>
<p>Pekaikon Norckon<br />
9 / 11 / 2014 (SUN)</p>
]]></content:encoded>
			<wfw:commentRss>/2014/11/turn-off-monitor-using-command-line.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Make your Ubuntu more beautifully</title>
		<link>/2014/11/make-your-ubuntu-more-beautifully.html</link>
		<comments>/2014/11/make-your-ubuntu-more-beautifully.html#respond</comments>
		<pubDate>Sun, 02 Nov 2014 06:41:44 +0000</pubDate>
		<dc:creator><![CDATA[Norckon]]></dc:creator>
				<category><![CDATA[Operating System]]></category>
		<category><![CDATA[Elementary Tweak]]></category>
		<category><![CDATA[GTK]]></category>
		<category><![CDATA[Ubuntu Unity]]></category>

		<guid isPermaLink="false">/?p=1365</guid>
		<description><![CDATA[INTRODUCE Elementary OS, An Ubuntu-derived distribution, but more beautifully than Ubuntu&#8217;s Unity desktop environment. If you wanna use Pantheon Desktop Environment(DE) simply, you can download Elementary OS from their official website. If you wanna make your Ubuntu more like Elementary OS, Please read go on. UPDATE YOUR UBUNTU Some reason, Pantheon DE required GTK 3.12, [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><a href="/wp-content/uploads/2014/11/QQ%E5%9B%BE%E7%89%8720141102004937.jpg"><img class="attachment-full" src="./wp-content/uploads/2014/11/QQ%E5%9B%BE%E7%89%8720141102004937.jpg" alt="QQ%E5%9B%BE%E7%89%87201411020049372" width="1920" height="1080" /></a></p>
<h2>INTRODUCE</h2>
<p>Elementary OS, An Ubuntu-derived distribution, but more beautifully than Ubuntu&#8217;s Unity desktop environment. If you wanna use Pantheon Desktop Environment(DE) simply, you can download Elementary OS from their official website. If you wanna make your Ubuntu more like Elementary OS, Please read go on.</p>
<h2>UPDATE YOUR UBUNTU</h2>
<p>Some reason, Pantheon DE required GTK 3.12, but Ubuntu use GTK 3.0 default. We need Elementary Testing PPA, and updating our system. This step will take a long time:</p>
<pre class="lang:default decode:true ">sudo apt-add-repository -y ppa:elementary-os/testing
sudo apt-get update
sudo apt-get upgrade</pre>
<h2>INSTALL PANTHEON DE</h2>
<p>After you update Ubuntu, We need Elementary Daily PPA, and install Pantheon DE:</p>
<pre class="lang:default decode:true">sudo apt-add-repository -y ppa:elementary-os/daily
sudo apt-get update
sudo apt-get install elementary-desktop</pre>
<p>Logout to log-in screen and select Pantheon DE (ubuntu icon beneath the user name), But there are many bugs. Then make system tray icon show-in Pantheon DE:</p>
<pre class="lang:default decode:true ">sudo gedit /etc/xdg/autostart/indicator*</pre>
<p>There is a variable &#8220;OnlyShowIn=Unity;GNOME;&#8221; &#8211;&gt; <strong>add</strong> Pantheon</p>
<blockquote><p><strong>e.g.</strong> OnlyShowIn=Unity;GNOME;Pantheon;</p></blockquote>
<h2>ADJUST PANTHEON DE</h2>
<p>You have to do this for all files starting with indicator. Ather this you need install Elementary Tweak, Add Elementary Tweak PPA:</p>
<pre class="lang:default decode:true">sudo apt-add-repository -y ppa:versable/elementary-tweaks-isis
sudo apt-get update
sudo apt-get install elementary-tweaks</pre>
<p>Then open <strong>Tweak</strong> from <strong>System Settings</strong>, set all option to <strong><span style="text-decoration: underline;">elementary</span></strong>, close window.<a href="/wp-content/uploads/2014/11/Screenshot-from-2014-08-25-2334303.png"><img class="attachment-full" src="./wp-content/uploads/2014/11/Screenshot-from-2014-08-25-2334303.png" alt="Screenshot-from-2014-08-25-2334303" width="1121" height="646" /></a></p>
<p>Appearance look like Elementary OS now, but some bugs not fixed yet. Some Window background will be black. You need DISABLE Overlay Scrollbars to fix this bug.</p>
<ul>
<li>Open Ubuntu Software Center. Search for and install dconf Editor.</li>
<li>Open dconf Editor, navigate to <span style="text-decoration: underline;">com/canonical/desktop/interface</span>. Change the scollbar-mode to <strong>normal.</strong></li>
</ul>
<p><a href="/wp-content/uploads/2014/11/disable-overlay-scrollbars-dconfeditor3.jpg"><img class="attachment-full" src="./wp-content/uploads/2014/11/disable-overlay-scrollbars-dconfeditor3.jpg" alt="disable-overlay-scrollbars-dconfeditor3" width="580" height="317" /></a></p>
<p>OR you can use command-line, maybe more simple:</p>
<pre class="lang:default decode:true ">gsettings set com.canonical.desktop.interface scrollbar-mode normal</pre>
<h2>ENABLE PANTHEON LOGIN</h2>
<p>After all of this, your Pantheon DE works! but log-in screen isn&#8217;t look like Elementary OS, run this command in terminal re-login will take effects.</p>
<pre class="lang:default decode:true ">cd /usr/share/lightdm/lightdm.conf.d/
sudo mv 40-pantheon-greeter.conf 60-pantheon-greeter.conf</pre>
<p>Reboot your computer, Have fun!!</p>
<h2><strong>Reference</strong></h2>
<ul>
<li><a href="http://www.reddit.com/r/elementaryos/comments/283pq0/possible_to_install_pantheon_desktop_in_ubuntu/">Possible to install pantheon desktop in ubuntu 14.04?</a></li>
<li><a href="https://bugs.launchpad.net/egtk/+bug/1303783/+activity">Activity log for bug #1303783</a></li>
<li><a href="http://ubuntuhandbook.org/index.php/2013/10/disable-overlay-scrollbars-ubuntu13-10/">How to Disable Overlay Scrollbars in Ubuntu 13.10 Saucy</a></li>
</ul>
<p>Pekaikon Norckon<br />
02 / 11 / 2014 (SUN)</p>
]]></content:encoded>
			<wfw:commentRss>/2014/11/make-your-ubuntu-more-beautifully.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>How to Fix Corrupt Drive Icons Problem in My Computer Window</title>
		<link>/2014/10/how-to-fix-corrupt-drive-icons-problem-in-my-computer-window.html</link>
		<comments>/2014/10/how-to-fix-corrupt-drive-icons-problem-in-my-computer-window.html#respond</comments>
		<pubDate>Sun, 12 Oct 2014 04:41:25 +0000</pubDate>
		<dc:creator><![CDATA[Norckon]]></dc:creator>
				<category><![CDATA[Operating System]]></category>
		<category><![CDATA[RUN]]></category>
		<category><![CDATA[Windows]]></category>

		<guid isPermaLink="false">/?p=1355</guid>
		<description><![CDATA[Many times we face a strange problem in Windows. When we open My Computer, one or more drives show some other icons instead of the default drive icons. It happens when we accidentally change the drive icons using some tweaking software. Sometimes its done by virus. Don&#8217;t worry. There is a very simple and small [&#8230;]]]></description>
				<content:encoded><![CDATA[<div style="max-width: 650px" class="wp-caption aligncenter"><a href="/wp-content/uploads/2014/10/helium-free-icon-set-psd.jpg"><img class="attachment-full" src="./wp-content/uploads/2014/10/helium-free-icon-set-psd.jpg" alt="helium-free-icon-set-psd" width="640" height="480" /></a><p class="wp-caption-text">Computer Icon Set</p></div>
<p>Many times we face a strange problem in Windows. When we open My Computer, one or more drives show some other icons instead of the default drive icons.</p>
<p>It happens when we accidentally change the drive icons using some tweaking software. Sometimes its done by virus.</p>
<p>Don&#8217;t worry. There is a very simple and small method to fix this problem and you can restore the default drive icons.</p>
<p><strong>1.</strong> Type regedit in RUN dialog box and press Enter. Now go to:</p>
<blockquote><p>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\explorer</p></blockquote>
<p><strong>2.</strong> Under this key, you&#8217;ll see a key &#8220;<strong>DriveIcons</strong>&#8220;. Delete it and log off or restart your Windows.</p>
<p><a href="/wp-content/uploads/2014/10/DriveIcons_Registry_Key.png"><img class="attachment-full" src="./wp-content/uploads/2014/10/DriveIcons_Registry_Key.png" alt="DriveIcons_Registry_Key" width="546" height="336" /></a></p>
<p><strong>3.</strong> It&#8217;ll solve the problem and you&#8217;ll get back default drive icons in My Computer.</p>
<p><strong>From:</strong> http://is.gd/ksxeAL</p>
]]></content:encoded>
			<wfw:commentRss>/2014/10/how-to-fix-corrupt-drive-icons-problem-in-my-computer-window.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Macbook Pro 安装 Windows 7 手记 [中文]</title>
		<link>/2014/09/macbook-pro-%E5%AE%89%E8%A3%85-windows-7-%E6%89%8B%E8%AE%B0.html</link>
		<comments>/2014/09/macbook-pro-%E5%AE%89%E8%A3%85-windows-7-%E6%89%8B%E8%AE%B0.html#respond</comments>
		<pubDate>Tue, 23 Sep 2014 17:15:30 +0000</pubDate>
		<dc:creator><![CDATA[Norckon]]></dc:creator>
				<category><![CDATA[Operating System]]></category>
		<category><![CDATA[Macbook]]></category>
		<category><![CDATA[Windows]]></category>
		<category><![CDATA[加载驱动失败]]></category>
		<category><![CDATA[安装]]></category>

		<guid isPermaLink="false">/?p=1340</guid>
		<description><![CDATA[English Title: Install Windows 7 on Macbook Pro 最近接到朋友一台 Macbook Pro 因为某些特殊的原因需要安装  Windows 7 操作系统，虽然我以前对 Mac OS X 的双系统的一部分的了解，但是对于真正的实践操作却从来没有过。 在我的印象中 Macbook Pro 安装 Windows 系统仅仅只是停留在只要有 BootCamp 就能安装的阶段。但是在真正的操作起来却遇到了不少的辣手的问题，比如说你并无法进入 Windows 7 的安装程序，他会提示你「加载驱动程序失败」之类的提示信息，导致你无法完全的进入到 Windows 7 的安装程序当中。或者换句话说，根本就没有办法开始 Windows 7 的安装程序。 在 Macbook Pro 的机身上面是无法找到 USB 2.0 端口的，起初我认为是 Windows 7 的安装程序并没有附带 USB 3.0 的 USB 磁盘的驱动程序，只需要更换成为 USB 2.0 的磁盘驱动器即可完成本次 Windows [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>English Title: Install Windows 7 on Macbook Pro</p>
<p>最近接到朋友一台 Macbook Pro 因为某些特殊的原因需要安装  Windows 7 操作系统，虽然我以前对 Mac OS X 的双系统的一部分的了解，但是对于真正的实践操作却从来没有过。</p>
<p>在我的印象中 Macbook Pro 安装 Windows 系统仅仅只是停留在只要有 BootCamp 就能安装的阶段。但是在真正的操作起来却遇到了不少的辣手的问题，比如说你并无法进入 Windows 7 的安装程序，他会提示你「加载驱动程序失败」之类的提示信息，导致你无法完全的进入到 Windows 7 的安装程序当中。或者换句话说，根本就没有办法开始 Windows 7 的安装程序。</p>
<p>在 Macbook Pro 的机身上面是无法找到 USB 2.0 端口的，起初我认为是 Windows 7 的安装程序并没有附带 USB 3.0 的 USB 磁盘的驱动程序，只需要更换成为 USB 2.0 的磁盘驱动器即可完成本次 Windows 7 的安装，但是其实并不是这样的。</p>
<p>后来我为了论证这个问题，就拿手上的 USB 2.0 的移动硬盘开始测试了，在我打开 BootCamp 助理程序的时候，一切还是和开始那样顺利的完成了 BootCamp 的步骤。但是当到达下一个步骤的时候，我本以为有两种可能，其中之一的可能为直接进入 Windows 安装阶段，即为成功的一种情况；尽管如此我也还是考虑了一种失败的情况，那么就是和之前一样提示「加载驱动程序失败」。</p>
<p>当我真正的进入安装进程的时候，一个意外的结果发生了，当 Windows Loading 的进度条读取完毕之后，图形化的安装程序界面出现了，这当然是理所当然的，倘若没有出现图形界面的话就代表着 Windows 的安装程序没有被正确的加载。不过这个令人意外的结果是，进入 Windows 安装程序的图形化的界面后系统直接挂死。鼠标并没有出现，而且键盘也毫无反应，只好强制关闭计算机。</p>
<p>在此之后，我的思考点仍然处于磁盘驱动器的位置，而并非 Windows 或者 BootCamp 的位置思考这个问题。于是特地找朋友借了一个 USB 2.0 的优盘。依然还是重复之前的步骤，使用 BootCamp 写入 Windows 7 的安装镜像。由于是 2.0 的优盘写入速度及其之慢，在耐心的等待下终于完成了数据的写入，重新启动到 USB 磁盘期待着屏幕上出现 Windows 的图形化安装程序。</p>
<p>此后当然如我所说的出现了 Windows 的图形化的安装程序，不过令人出乎意料的问题又还是出现了，屏幕上出现了一个非常大的对话框，标题为「加载驱动程序失败」。无奈之下谷歌之，有人说在弹出该提示后安装 SMBus 驱动程序即可解决问题。</p>
<p>于是我似乎记起来了 BootCamp 之前会在制作的 USB 磁盘中复制一份用于 Windows 的驱动程序。但是我发现在 Windows 安装程序界面并不能浏览 USB 磁盘驱动器的目录，这就意味着你根本不能够把驱动放在 USB 的设备上。既然无法存放在 USB 的设备上，那么就只能够思考将驱动程序存放在机器的本地磁盘上。</p>
<p>于是我回想在启动 Windows 图形安装程序的界面后可以浏览的磁盘的目录，似乎可以直接读取到 BOOTCAMP 分区的文件。立刻重启动到 OSX 系统，将 USB 移动磁盘中的驱动程序文件夹 BootCamp 和 $WinPEDrivers$ 复制到了 BootCamp 分区。然后重启计算机到 Windows 图形化安装界面。</p>
<p>本以为还是会弹出「加载驱动程序失败」的对话框，然后让我手动选择 SMBus 驱动程序。但是启动到 Windows 图形化安装界面后，一直提示「安装程序正在准备」，误认为系统又挂死。可是数秒钟后直接进入了常规的 Windows 安装阶段。他直接自动加载好了所有需要的驱动程序！</p>
<p>随后的所有安装过程均与 x86 兼容计算机一致，但是问题并不是就这样子解决了。当把 Windows 7 的基本系统安装完毕后，问题又来了。 Windows 7 并没有附带 USB 3.0 驱动程序，而 MacBook 上仅有 USB 3.0 的端口这就意味着你根本就无法在 Windows 7 中读取 USB 磁盘驱动器的内容。</p>
<p>倘若无法读取 USB 磁盘驱动器的内容，而且无线网卡又处于缺失驱动程序的状态，那么我们如何安装成驱动程序？没错这就是一个摆在我们面前的现实问题，我们要想办法去解决它。于是我就想了一个非常奇妙的办法。</p>
<p>众所周知，在 x86 兼容机上安装 Windows 7 操作系统，我们通常都会启动到 WinPE 维护界面，而且现在国产的各种 PE 基本上都集成了 USB 3.0 或者 AHCI 等主流驱动程序。于是插上 WinPE 的优盘，按下 option + power 进入 Macbook 的启动菜单并选择优盘启动。然后即可进入到 PE。值得一提的是 Macbook Pro 并不支持使用 Win2003 为基本的 PE 启动，他将会提示您的计算机硬件配置过低。而 Win7/8 为基本的 PE 是可以正常启动的。</p>
<p>进入到 PE 之后，我们不仅成功地读到了 U 盘中的所有数据，而且还成功的读取到了硬盘中的数据，那么就意味着可以将 U 盘中的所有数据都复制到硬盘当中。与想象中的一样，这一步做的非常顺利。我们需要将 $WinPeDrviers$ 与 BootCamp 这两个文件夹复制到我们的硬盘当中，并且在此重启到 Windows 7 当中。</p>
<p>此时就可以直接从硬盘当中安装 Windows 7 的安装程序了。在所有驱动程序安装完成后，你将会面对一个非常严重的问题，那么就是分辨率。由于分辨率太高，而 Windows 7 的 DPI 机制并不如 OSX 那么完美，可能会无法得到最佳的视觉体验。这也无疑留下了一个遗憾。</p>
<p>by 北极光.Norckon<br />
2014 年 9 月 24 日（三）</p>
]]></content:encoded>
			<wfw:commentRss>/2014/09/macbook-pro-%E5%AE%89%E8%A3%85-windows-7-%E6%89%8B%E8%AE%B0.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Fix ubuntu boot failure with message &#8220;Gave up waiting for root device&#8221;</title>
		<link>/2014/08/fix-ubuntu-boot-failure-with-message-gave-up-waiting-for-root-device.html</link>
		<comments>/2014/08/fix-ubuntu-boot-failure-with-message-gave-up-waiting-for-root-device.html#respond</comments>
		<pubDate>Tue, 19 Aug 2014 12:14:58 +0000</pubDate>
		<dc:creator><![CDATA[Norckon]]></dc:creator>
				<category><![CDATA[Operating System]]></category>

		<guid isPermaLink="false">/?p=1325</guid>
		<description><![CDATA[Maybe due to Hard Disk itself speed or type, or MotherBoard&#8217;s problem. Hard Disk detect is timed out, make Ubuntu cannot found any Hard Disk, then Ubuntu stop booting and report &#8220;Gave up waiting for root device&#8221;. Such problem are mostly caused by Hardware problem. Like Hard Disk is working in Low speed UDMA or [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Maybe due to Hard Disk itself speed or type, or MotherBoard&#8217;s problem. Hard Disk detect is timed out, make Ubuntu cannot found any Hard Disk, then Ubuntu stop booting and report &#8220;Gave up waiting for root device&#8221;.</p>
<p>Such problem are mostly caused by Hardware problem. Like Hard Disk is working in Low speed UDMA or PIO mode. And usually caused by this reason. Or sometimes caused by Motherboard&#8217;s problem.</p>
<p>Ubuntu detect Hard Disk by disk type/level from high to low. Ubuntu will detect PIO mode disk at booting up 128 secs. Though it can be detected, but timed out. If timed out then ubuntu will gave up booting, cause boot failure.</p>
<p>To fix this problem, Has two way. One is replace a high speed Hard Disk or MotherBoard. by other hand, You can change the time of waiting root device of Ubuntu, Make Ubuntu never give up.</p>
<p>FIRST, Reading Hard Disk&#8217;s files through any way. For exmaple, Using Ext2FS on Windows systems or mount on Ubuntu computers. Then open /etc/default/grub file.</p>
<p>SECOND, After open file, find the line <strong>GRUB_CMDLINE_LINUX_DEFAULT</strong> , For example:</p>
<pre class="lang:default decode:true">GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"</pre>
<p>THIRD, add <strong>rootdelay=&lt;sec&gt;</strong> before last quote. For example, set rootdelay to 180 seconds:</p>
<pre class="lang:default decode:true">GRUB_CMDLINE_LINUX_DEFAULT="quiet splash rootdelay=180"</pre>
<p>FINAL, Run command <strong><code>update-grub</code></strong> and <strong><code>dpkg --configure -a</code></strong> then <strong>reboot your computer</strong> will take effect.</p>
<p>&nbsp;</p>
<p>by Pekaikon Norckon<br />
8 / 19 / 2014 (TUE)</p>
]]></content:encoded>
			<wfw:commentRss>/2014/08/fix-ubuntu-boot-failure-with-message-gave-up-waiting-for-root-device.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>解决 Ubuntu 因为磁盘加载过慢而启动失败</title>
		<link>/2014/08/%E8%A7%A3%E5%86%B3-ubuntu-%E5%9B%A0%E4%B8%BA%E7%A3%81%E7%9B%98%E5%8A%A0%E8%BD%BD%E8%BF%87%E6%85%A2%E8%80%8C%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html</link>
		<comments>/2014/08/%E8%A7%A3%E5%86%B3-ubuntu-%E5%9B%A0%E4%B8%BA%E7%A3%81%E7%9B%98%E5%8A%A0%E8%BD%BD%E8%BF%87%E6%85%A2%E8%80%8C%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html#respond</comments>
		<pubDate>Tue, 19 Aug 2014 11:55:21 +0000</pubDate>
		<dc:creator><![CDATA[Norckon]]></dc:creator>
				<category><![CDATA[Operating System]]></category>

		<guid isPermaLink="false">/?p=1323</guid>
		<description><![CDATA[可能由于磁盘本身的速度或者接口类型的原因或者说电脑主板的原因，而磁盘加载时间超出 Ubuntu 等待磁盘时间，最终导致 Ubuntu 没能正常加载磁盘并报出 Gave up waiting for root device （放弃等待根设备）错误。 对于这类错误出现多半是由于硬件问题，比如磁盘使用低等级 UDMA 或者 PIO 时，这类错误将会变得较为常见。或者因为主板的问题导致磁盘加载延缓。 Ubuntu 在启动系统的时候按照磁盘标准从高到低检测，最后一项检测类型是 PIO 磁盘，是在 128 秒的时候开始检测。虽然可以检测到，但是早已超出 Ubuntu 等待根设备的时间。而只要一超出 Ubuntu 等待根设备的时候，就会支持放弃等待，也就是启动失败。尽管再过一段时间检测出磁盘也不会继续启动。 要解决这样的问题，我们分两种解决方法。一种是更换更快速的磁盘或者更好的主板，这是一种解决方法。当然也有一种不需要任何成本的解决方法，那就是修改 Ubuntu 的启动时根设备等待时间，让其等待更长的时间，以至于不放弃。 1、首先使用一种办法读取该磁盘内容，你可以在 Windows 系统上使用 Ext2FS 或者挂载到 Ubuntu 电脑上，然后使用文本编辑器编辑 /etc/default/grub 文件。 2、打开文件后，我们找到 GRUB_CMDLINE_LINUX_DEFAULT 这一行，比如源文件是这样的： GRUB_CMDLINE_LINUX_DEFAULT="quiet splash" 3、我们在引号内容的最后面隔开加上 rootdelay=&#60;sec&#62;，比如设置为 180 秒那么就是如下所示，至于设置多少秒根据自己实际情况设置： GRUB_CMDLINE_LINUX_DEFAULT="quiet splash rootdelay=180" 4、最后执行 update-grub 与 dpkg [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>可能由于磁盘本身的速度或者接口类型的原因或者说电脑主板的原因，而磁盘加载时间超出 Ubuntu 等待磁盘时间，最终导致 Ubuntu 没能正常加载磁盘并报出 Gave up waiting for root device （放弃等待根设备）错误。</p>
<p>对于这类错误出现多半是由于硬件问题，比如磁盘使用低等级 UDMA 或者 PIO 时，这类错误将会变得较为常见。或者因为主板的问题导致磁盘加载延缓。</p>
<p>Ubuntu 在启动系统的时候按照磁盘标准从高到低检测，最后一项检测类型是 PIO 磁盘，是在 128 秒的时候开始检测。虽然可以检测到，但是早已超出 Ubuntu 等待根设备的时间。而只要一超出 Ubuntu 等待根设备的时候，就会支持放弃等待，也就是启动失败。尽管再过一段时间检测出磁盘也不会继续启动。</p>
<p>要解决这样的问题，我们分两种解决方法。一种是更换更快速的磁盘或者更好的主板，这是一种解决方法。当然也有一种不需要任何成本的解决方法，那就是修改 Ubuntu 的启动时根设备等待时间，让其等待更长的时间，以至于不放弃。</p>
<p>1、首先使用一种办法读取该磁盘内容，你可以在 Windows 系统上使用 Ext2FS 或者挂载到 Ubuntu 电脑上，然后使用文本编辑器编辑 /etc/default/grub 文件。</p>
<p>2、打开文件后，我们找到 GRUB_CMDLINE_LINUX_DEFAULT 这一行，比如源文件是这样的：</p>
<pre class="lang:default decode:true">GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"</pre>
<p>3、我们在引号内容的最后面隔开加上 rootdelay=&lt;sec&gt;，比如设置为 180 秒那么就是如下所示，至于设置多少秒根据自己实际情况设置：</p>
<pre class="lang:default decode:true">GRUB_CMDLINE_LINUX_DEFAULT="quiet splash rootdelay=180"</pre>
<p>4、最后执行 <code>update-grub</code> 与 <code>dpkg --configure -a 命令即可，重启生效。</code></p>
<p>&nbsp;</p>
<p>作：北极光.Norckon<br />
日：2014 年 8 月 19 日 （二）</p>
<p>参：http://vandorp.biz/2012/06/how-to-fix-ubuntu-12-04-lts-bugs/#.U_M5ImObMW1</p>
]]></content:encoded>
			<wfw:commentRss>/2014/08/%E8%A7%A3%E5%86%B3-ubuntu-%E5%9B%A0%E4%B8%BA%E7%A3%81%E7%9B%98%E5%8A%A0%E8%BD%BD%E8%BF%87%E6%85%A2%E8%80%8C%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>
